plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.jfrog.artifactory' version '4.11.0'
    id 'org.sonarqube' version '2.8'
    id 'org.owasp.dependencycheck' version '5.2.4'
}

artifactoryPublish.skip = true

group = 'fi.vm.yti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    // put your artifactory parameters to $HOME/.gradle/gradle.properties
    if (project.hasProperty('artifactoryUrl')) {
        maven {
            url "$artifactoryUrl"
            credentials {
                username "$artifactoryUsername"
                password "$artifactoryPassword"
            }
        }
    }
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "Hoxton.RELEASE")
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 0, 'seconds'
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-web'

    implementation 'org.springdoc:springdoc-openapi-ui:1.2.15'

    implementation 'fi.vm.yti:yti-spring-security:0.1.13'
    implementation 'fi.vm.yti:yti-spring-migration:0.1.4'

    implementation 'org.apache.activemq:activemq-broker'
    implementation 'org.elasticsearch:elasticsearch:6.5.4'
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:6.5.4'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.5.4'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'ch.qos.logback:logback-parent:1.2.3'
    implementation 'ch.qos.logback:logback-core'
    implementation 'net.logstash.logback:logstash-logback-encoder:5.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'junit:junit:4.12'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "yti-terminology-api"
        property "sonar.projectName", "yti-terminology-api"
        property("sonar.dependencyCheck.reportPath", "$buildDir/reports/dependency-check-report.xml")
        property("sonar.dependencyCheck.htmlReportPath", "$buildDir/reports/dependency-check-report.html")
    }
}

dependencyCheck {
    format = 'ALL'
    autoUpdate = false
    analyzers {
        centralEnabled = false
    }
    data {
        directory = System.getenv('OWASP_DATA_DIR')
    }
}
